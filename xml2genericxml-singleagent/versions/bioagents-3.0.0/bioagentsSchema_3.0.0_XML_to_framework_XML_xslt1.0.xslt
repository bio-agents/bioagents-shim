<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2018r2sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="tbf xs">
	<xsl:template name="tbf:tbf1_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::value">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::type">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::version">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf3_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf4_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf5_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf6_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf7_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::uri">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::term">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf8_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::url">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::type">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::note">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf9_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::url">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::type">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::note">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::version">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf10_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::url">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::type">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::note">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf11_">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/node()">
			<xsl:variable name="var1_current" select="."/>
			<xsl:choose>
				<xsl:when test="self::*">
					<xsl:if test="self::doi">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::pmid">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::pmcid">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::type">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
					<xsl:if test="self::version">
						<xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
							<xsl:value-of select="."/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:when test="not(self::text())">
					<xsl:copy-of select="."/>
				</xsl:when>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_initial" select="."/>
		<root>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">file:///E:/repos/GitHub/bioagentsShim/xml2genericxml-singleagent/versions/bioagents-3.0.0/bioagents-3.0.0_framework_singleagent.xsd</xsl:attribute>
			<xsl:for-each select="agents/agent">
				<xsl:variable name="var2_cur" select="."/>
				<name>
					<xsl:value-of select="summary/name"/>
				</name>
			</xsl:for-each>
			<xsl:for-each select="agents/agent">
				<xsl:variable name="var3_cur" select="."/>
				<description>
					<xsl:value-of select="summary/description"/>
				</description>
			</xsl:for-each>
			<xsl:for-each select="agents/agent">
				<xsl:variable name="var4_cur" select="."/>
				<homepage>
					<xsl:value-of select="summary/homepage"/>
				</homepage>
			</xsl:for-each>
			<xsl:for-each select="agents/agent/summary/bioagentsID">
				<xsl:variable name="var5_cur" select="."/>
				<bioagentsID>
					<xsl:value-of select="."/>
				</bioagentsID>
			</xsl:for-each>
			<xsl:for-each select="agents/agent/summary/bioagentsCURIE">
				<xsl:variable name="var6_cur" select="."/>
				<bioagentsCURIE>
					<xsl:value-of select="."/>
				</bioagentsCURIE>
			</xsl:for-each>
			<version>
				<xsl:for-each select="agents/agent/summary/version">
					<xsl:variable name="var7_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</version>
			<otherID>
				<xsl:for-each select="agents/agent/summary/otherID">
					<xsl:variable name="var8_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf1_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</otherID>
			<function>
				<xsl:for-each select="agents/agent/function">
					<xsl:variable name="var9_cur" select="."/>
					<list-item>
						<operation>
							<xsl:for-each select="operation">
								<xsl:variable name="var10_cur" select="."/>
								<list-item>
									<xsl:call-template name="tbf:tbf2_">
										<xsl:with-param name="input" select="."/>
									</xsl:call-template>
								</list-item>
							</xsl:for-each>
						</operation>
						<input>
							<xsl:for-each select="input">
								<xsl:variable name="var11_cur" select="."/>
								<list-item>
									<data>
										<xsl:call-template name="tbf:tbf3_">
											<xsl:with-param name="input" select="data"/>
										</xsl:call-template>
									</data>
									<format>
										<xsl:for-each select="format">
											<xsl:variable name="var12_cur" select="."/>
											<list-item>
												<xsl:call-template name="tbf:tbf4_">
													<xsl:with-param name="input" select="."/>
												</xsl:call-template>
											</list-item>
										</xsl:for-each>
									</format>
								</list-item>
							</xsl:for-each>
						</input>
						<output>
							<xsl:for-each select="output">
								<xsl:variable name="var13_cur" select="."/>
								<list-item>
									<data>
										<xsl:call-template name="tbf:tbf5_">
											<xsl:with-param name="input" select="data"/>
										</xsl:call-template>
									</data>
									<format>
										<xsl:for-each select="format">
											<xsl:variable name="var14_cur" select="."/>
											<list-item>
												<xsl:call-template name="tbf:tbf6_">
													<xsl:with-param name="input" select="."/>
												</xsl:call-template>
											</list-item>
										</xsl:for-each>
									</format>
								</list-item>
							</xsl:for-each>
						</output>
						<xsl:for-each select="note">
							<xsl:variable name="var15_cur" select="."/>
							<note>
								<xsl:value-of select="."/>
							</note>
						</xsl:for-each>
						<xsl:for-each select="cmd">
							<xsl:variable name="var16_cur" select="."/>
							<cmd>
								<xsl:value-of select="."/>
							</cmd>
						</xsl:for-each>
					</list-item>
				</xsl:for-each>
			</function>
			<agentType>
				<xsl:for-each select="agents/agent/labels/agentType">
					<xsl:variable name="var17_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</agentType>
			<topic>
				<xsl:for-each select="agents/agent/labels/topic">
					<xsl:variable name="var18_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf7_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</topic>
			<operatingSystem>
				<xsl:for-each select="agents/agent/labels/operatingSystem">
					<xsl:variable name="var19_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</operatingSystem>
			<language>
				<xsl:for-each select="agents/agent/labels/language">
					<xsl:variable name="var20_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</language>
			<xsl:for-each select="agents/agent/labels/license">
				<xsl:variable name="var21_cur" select="."/>
				<license>
					<xsl:value-of select="."/>
				</license>
			</xsl:for-each>
			<collectionID>
				<xsl:for-each select="agents/agent/labels/collectionID">
					<xsl:variable name="var22_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</collectionID>
			<xsl:for-each select="agents/agent/labels/maturity">
				<xsl:variable name="var23_cur" select="."/>
				<maturity>
					<xsl:value-of select="."/>
				</maturity>
			</xsl:for-each>
			<xsl:for-each select="agents/agent/labels/cost">
				<xsl:variable name="var24_cur" select="."/>
				<cost>
					<xsl:value-of select="."/>
				</cost>
			</xsl:for-each>
			<accessibility>
				<xsl:for-each select="agents/agent/labels/accessibility">
					<xsl:variable name="var25_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</accessibility>
			<iechorPlatform>
				<xsl:for-each select="agents/agent/labels/iechorPlatform">
					<xsl:variable name="var26_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</iechorPlatform>
			<iechorNode>
				<xsl:for-each select="agents/agent/labels/iechorNode">
					<xsl:variable name="var27_cur" select="."/>
					<list-item>
						<xsl:value-of select="."/>
					</list-item>
				</xsl:for-each>
			</iechorNode>
			<link>
				<xsl:for-each select="agents/agent/link">
					<xsl:variable name="var28_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf8_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</link>
			<download>
				<xsl:for-each select="agents/agent/download">
					<xsl:variable name="var29_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf9_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</download>
			<documentation>
				<xsl:for-each select="agents/agent/documentation">
					<xsl:variable name="var30_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf10_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</documentation>
			<publication>
				<xsl:for-each select="agents/agent/publication">
					<xsl:variable name="var31_cur" select="."/>
					<list-item>
						<xsl:call-template name="tbf:tbf11_">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</list-item>
				</xsl:for-each>
			</publication>
			<credit>
				<xsl:for-each select="agents/agent/credit">
					<xsl:variable name="var32_cur" select="."/>
					<list-item>
						<xsl:for-each select="name">
							<xsl:variable name="var33_cur" select="."/>
							<name>
								<xsl:value-of select="."/>
							</name>
						</xsl:for-each>
						<xsl:for-each select="email">
							<xsl:variable name="var34_cur" select="."/>
							<email>
								<xsl:value-of select="."/>
							</email>
						</xsl:for-each>
						<xsl:for-each select="url">
							<xsl:variable name="var35_cur" select="."/>
							<url>
								<xsl:value-of select="."/>
							</url>
						</xsl:for-each>
						<xsl:for-each select="orcidid">
							<xsl:variable name="var36_cur" select="."/>
							<orcidid>
								<xsl:value-of select="."/>
							</orcidid>
						</xsl:for-each>
						<xsl:for-each select="typeEntity">
							<xsl:variable name="var37_cur" select="."/>
							<typeEntity>
								<xsl:value-of select="."/>
							</typeEntity>
						</xsl:for-each>
						<typeRole>
							<xsl:for-each select="typeRole">
								<xsl:variable name="var38_cur" select="."/>
								<list-item>
									<xsl:value-of select="."/>
								</list-item>
							</xsl:for-each>
						</typeRole>
						<xsl:for-each select="note">
							<xsl:variable name="var39_cur" select="."/>
							<note>
								<xsl:value-of select="."/>
							</note>
						</xsl:for-each>
					</list-item>
				</xsl:for-each>
			</credit>
		</root>
	</xsl:template>
</xsl:stylesheet>
